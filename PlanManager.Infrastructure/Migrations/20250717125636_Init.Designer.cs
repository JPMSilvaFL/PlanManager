// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanManager.Infrastructure.Data;

#nullable disable

namespace PlanManager.Infrastructure.Migrations
{
    [DbContext(typeof(PlanManagerDbContext))]
    [Migration("20250717125636_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-preview.6.25358.103")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.Person", b =>
                {
                    b.OwnsOne("PlanManager.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("City");

                            b1.Property<string>("Complement")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Complement");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Country");

                            b1.Property<bool>("HasHouseNumber")
                                .HasColumnType("bit")
                                .HasColumnName("HasHouseNumber");

                            b1.Property<string>("HouseNumber")
                                .HasColumnType("nvarchar")
                                .HasColumnName("HouseNumber");

                            b1.Property<string>("Neighboorhood")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Neighboorhood");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Street");

                            b1.Property<string>("Zipcode")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Zipcode");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Identification")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Document");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar")
                                .HasColumnName("Type");

                            b1.HasKey("PersonId");

                            b1.HasIndex("Identification")
                                .IsUnique();

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("PersonId");

                            b1.HasIndex("EmailAddress")
                                .IsUnique();

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("LastName");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.Phone", "Phone", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar")
                                .HasColumnName("CountryCode");

                            b1.Property<string>("DDD")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar")
                                .HasColumnName("DDD");

                            b1.Property<string>("NumberWithDigit")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar")
                                .HasColumnName("PhoneNumberWithDigit");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Document")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("Phone")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
