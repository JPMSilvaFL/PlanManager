// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanManager.Infrastructure.Data;

#nullable disable

namespace PlanManager.Infrastructure.Migrations
{
    [DbContext(typeof(PlanManagerDbContext))]
    [Migration("20250730192634_AlterColumnUsernameInUser")]
    partial class AlterColumnUsernameInUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-preview.6.25358.103")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.License", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoPlan")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Plan");

                    b.Property<string>("IdVoSign")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Sign");

                    b.Property<DateOnly?>("LastDaySynced")
                        .HasColumnType("date")
                        .HasColumnName("LastDaySynced");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("Status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoPlan");

                    b.HasIndex("IdVoSign");

                    b.ToTable("License", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.Plan", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoCompany")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("IdCompany");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoCompany");

                    b.ToTable("Plan", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.PlanPermission", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoCompany")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("IdCompany");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoCompany");

                    b.ToTable("PlanPermission", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.PlanPermissionRelation", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoPlan")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Plan");

                    b.Property<string>("IdVoPlanPermission")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("PlanPermission");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoPlan");

                    b.HasIndex("IdVoPlanPermission");

                    b.ToTable("PlanPermissionRelation", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.Sign", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoCompany")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Company");

                    b.Property<string>("IdVoCustomer")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Customer");

                    b.Property<DateTime?>("InitialTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("InitialTime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoCompany")
                        .IsUnique();

                    b.HasIndex("IdVoCustomer")
                        .IsUnique();

                    b.ToTable("Sign", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.Customer", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoPerson")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Person");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoPerson")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.Person", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.User", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("IdVoPerson")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("IdPerson");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Password");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("IdVo");

                    b.HasIndex("IdVoPerson")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Utils.LogActivity", b =>
                {
                    b.Property<string>("IdVo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Action");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("FromUserIdVo")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ObjectIdVo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ObjectId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("User");

                    b.HasKey("IdVo");

                    b.HasIndex("FromUserIdVo");

                    b.ToTable("LogActivity", (string)null);
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.License", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.PlanManager.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("IdVoPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_License_Plan");

                    b.HasOne("PlanManager.Domain.Entities.PlanManager.Sign", "Sign")
                        .WithMany()
                        .HasForeignKey("IdVoSign")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_License_Sign");

                    b.OwnsOne("PlanManager.Domain.ValueObjects.ValueVo", "ValueVo", b1 =>
                        {
                            b1.Property<string>("LicenseIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<decimal>("ValueWith2Digits")
                                .HasColumnType("decimal")
                                .HasColumnName("Value");

                            b1.HasKey("LicenseIdVo");

                            b1.ToTable("License");

                            b1.WithOwner()
                                .HasForeignKey("LicenseIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.ExpireDateVo", "ExpireDate", b1 =>
                        {
                            b1.Property<string>("LicenseIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<DateOnly>("Expire")
                                .HasColumnType("date")
                                .HasColumnName("ExpireDate");

                            b1.Property<int>("ProlongationInDays")
                                .HasColumnType("int")
                                .HasColumnName("ProlongationInDays");

                            b1.HasKey("LicenseIdVo");

                            b1.ToTable("License");

                            b1.WithOwner()
                                .HasForeignKey("LicenseIdVo");
                        });

                    b.Navigation("ExpireDate");

                    b.Navigation("Plan");

                    b.Navigation("Sign");

                    b.Navigation("ValueVo")
                        .IsRequired();
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.Plan", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.Profiles.Person", "Company")
                        .WithMany()
                        .HasForeignKey("IdVoCompany")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Plan_Person_PersonId");

                    b.OwnsOne("PlanManager.Domain.ValueObjects.NameVo", "NameVo", b1 =>
                        {
                            b1.Property<string>("PlanIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Name");

                            b1.HasKey("PlanIdVo");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Plan");

                            b1.WithOwner()
                                .HasForeignKey("PlanIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.ValueVo", "ValueVo", b1 =>
                        {
                            b1.Property<string>("PlanIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<decimal>("ValueWith2Digits")
                                .HasColumnType("decimal")
                                .HasColumnName("Value");

                            b1.HasKey("PlanIdVo");

                            b1.ToTable("Plan");

                            b1.WithOwner()
                                .HasForeignKey("PlanIdVo");
                        });

                    b.Navigation("Company");

                    b.Navigation("NameVo")
                        .IsRequired();

                    b.Navigation("ValueVo")
                        .IsRequired();
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.PlanPermission", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.Profiles.Person", "Company")
                        .WithMany()
                        .HasForeignKey("IdVoCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PlanPermission_Company");

                    b.OwnsOne("PlanManager.Domain.ValueObjects.NameVo", "NameVo", b1 =>
                        {
                            b1.Property<string>("PlanPermissionIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Name");

                            b1.HasKey("PlanPermissionIdVo");

                            b1.ToTable("PlanPermission");

                            b1.WithOwner()
                                .HasForeignKey("PlanPermissionIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.PermissionCodeVo", "CodeVo", b1 =>
                        {
                            b1.Property<string>("PlanPermissionIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(28)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Code");

                            b1.HasKey("PlanPermissionIdVo");

                            b1.HasIndex("Code")
                                .IsUnique();

                            b1.ToTable("PlanPermission");

                            b1.WithOwner()
                                .HasForeignKey("PlanPermissionIdVo");
                        });

                    b.Navigation("CodeVo")
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("NameVo")
                        .IsRequired();
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.PlanPermissionRelation", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.PlanManager.Plan", "Plan")
                        .WithMany("Permissions")
                        .HasForeignKey("IdVoPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PlanPermissionRelation_Plan_PlanId");

                    b.HasOne("PlanManager.Domain.Entities.PlanManager.PlanPermission", "PlanPermission")
                        .WithMany("Plans")
                        .HasForeignKey("IdVoPlanPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PlanPermissionRelation_PlanPermission_PlanPermissionId");

                    b.Navigation("Plan");

                    b.Navigation("PlanPermission");
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.Sign", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.Profiles.Person", "Company")
                        .WithOne()
                        .HasForeignKey("PlanManager.Domain.Entities.PlanManager.Sign", "IdVoCompany")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Sign_Company");

                    b.HasOne("PlanManager.Domain.Entities.Profiles.Person", "Customer")
                        .WithOne()
                        .HasForeignKey("PlanManager.Domain.Entities.PlanManager.Sign", "IdVoCustomer")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Sign_Customer");

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.Customer", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.Profiles.Person", "Person")
                        .WithOne()
                        .HasForeignKey("PlanManager.Domain.Entities.Profiles.Customer", "IdVoPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Customer_Person");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.Person", b =>
                {
                    b.OwnsOne("PlanManager.Domain.ValueObjects.AddressVo", "AddressVo", b1 =>
                        {
                            b1.Property<string>("PersonIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("City");

                            b1.Property<string>("Complement")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Complement");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Country");

                            b1.Property<bool>("HasHouseNumber")
                                .HasColumnType("bit")
                                .HasColumnName("HasHouseNumber");

                            b1.Property<string>("HouseNumber")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar")
                                .HasColumnName("HouseNumber");

                            b1.Property<string>("Neighboorhood")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Neighboorhood");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Street");

                            b1.Property<string>("Zipcode")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Zipcode");

                            b1.HasKey("PersonIdVo");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.DocumentVo", "DocumentVo", b1 =>
                        {
                            b1.Property<string>("PersonIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Identification")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Document");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Type");

                            b1.HasKey("PersonIdVo");

                            b1.HasIndex("Identification")
                                .IsUnique();

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.EmailVo", "EmailVo", b1 =>
                        {
                            b1.Property<string>("PersonIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("PersonIdVo");

                            b1.HasIndex("EmailAddress")
                                .IsUnique();

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.FullNameVo", "FullNameVo", b1 =>
                        {
                            b1.Property<string>("PersonIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("LastName");

                            b1.HasKey("PersonIdVo");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdVo");
                        });

                    b.OwnsOne("PlanManager.Domain.ValueObjects.PhoneVo", "PhoneVo", b1 =>
                        {
                            b1.Property<string>("PersonIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar")
                                .HasColumnName("CountryCode");

                            b1.Property<string>("DDD")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar")
                                .HasColumnName("DDD");

                            b1.Property<string>("NumberWithDigit")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar")
                                .HasColumnName("PhoneNumberWithDigit");

                            b1.HasKey("PersonIdVo");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdVo");
                        });

                    b.Navigation("AddressVo")
                        .IsRequired();

                    b.Navigation("DocumentVo")
                        .IsRequired();

                    b.Navigation("EmailVo")
                        .IsRequired();

                    b.Navigation("FullNameVo")
                        .IsRequired();

                    b.Navigation("PhoneVo")
                        .IsRequired();
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Profiles.User", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.Profiles.Person", "Person")
                        .WithOne()
                        .HasForeignKey("PlanManager.Domain.Entities.Profiles.User", "IdVoPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Person");

                    b.OwnsOne("PlanManager.Domain.ValueObjects.UsernameVo", "UsernameVo", b1 =>
                        {
                            b1.Property<string>("UserIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Username");

                            b1.HasKey("UserIdVo");

                            b1.HasIndex("Username")
                                .IsUnique();

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserIdVo");
                        });

                    b.Navigation("Person");

                    b.Navigation("UsernameVo")
                        .IsRequired();
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.Utils.LogActivity", b =>
                {
                    b.HasOne("PlanManager.Domain.Entities.Profiles.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserIdVo");

                    b.OwnsOne("PlanManager.Domain.ValueObjects.DescriptionVo", "DescriptionVo", b1 =>
                        {
                            b1.Property<string>("LogActivityIdVo")
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar")
                                .HasColumnName("Description");

                            b1.HasKey("LogActivityIdVo");

                            b1.ToTable("LogActivity");

                            b1.WithOwner()
                                .HasForeignKey("LogActivityIdVo");
                        });

                    b.Navigation("DescriptionVo")
                        .IsRequired();

                    b.Navigation("FromUser");
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.Plan", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("PlanManager.Domain.Entities.PlanManager.PlanPermission", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
